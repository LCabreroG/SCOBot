
function Local_API_1484_11(options){"use strict";var defaults={version:"1.0",moddate:"02/23/2012 10:00AM",createdate:"07/17/2010 08:15AM",prefix:"Local_API_1484_11",errorCode:0,diagnostic:'',initialized:0,terminated:0},settings=$.extend(defaults,options),CMI={_version:"Local 1.0",comments_from_learner:{_children:"comment,location,timestamp",_count:"0"},comments_from_lms:{_children:"comment,location,timestamp",_count:"0"},completion_status:"unknown",completion_threshold:"0.7",credit:"no-credit",entry:"ab-initio",exit:"",interactions:{_children:"id,type,objectives,timestamp,correct_responses,weighting,learner_response,result,latency,description",_count:"0"},launch_data:"?name1=value1&name2=value2&name3=value3",learner_id:"100",learner_name:"Simulated User",learner_preference:{_children:"audio_level,language,delivery_speed,audio_captioning",audio_level:"1",language:"",delivery_speed:"1",audio_captioning:"0"},location:"",max_time_allowed:"",mode:"normal",objectives:{_children:"id,score,success_status,completion_status,description",_count:"0"},progress_measure:"",scaled_passing_score:"0.7",score:{_children:"scaled,raw,min,max",scaled:"",raw:"",min:"",max:""},session_time:"PT0H0M0S",success_status:"unknown",suspend_data:"",time_limit_action:"",total_time:"PT0H0M0S"},cmi={},completion_status="|completed|incomplete|not attempted|unknown|",read_only="|_version|completion_threshold|credit|entry|launch_data|learner_id|learner_name|_children|_count|mode|maximum_time_allowed|scaled_passing_score|time_limit_action|total_time|comment|",write_only="|exit|session_time|",exit="|time-out|suspend|logout|normal||",errors={0:"No error",101:"General exception",102:"General Initialization Failure",103:"Already Initialized",104:"Content Instance Terminated",111:"General Termination Failure",112:"Termination Before Initialization",113:"Termination After Termination",122:"Retrieve Data Before Initialization",123:"Retrieve Data After Termination",132:"Store Data Before Initialization",133:"Store Data After Termination",142:"Commit Before Initialization",143:"Commit After Termination",201:"General Argument Error",301:"General Get Failure",351:"General Set Failure",391:"General Commit Failure",401:"Undefined Data Model",402:"Unimplemented Data Model Element",403:"Data Model Element Value Not Initialized",404:"Data Model Element Is Read Only",405:"Data Model Element Is Write Only",406:"Data Model Element Type Mismatch",407:"Data Model Element Value Out Of Range",408:"Data Model Dependency Not Established"},self=this;function throwVocabError(k,v){settings.diganostic="The "+k+" of "+v+" must be a proper vocabulary element.";settings.errorCode=406;return'false';}
function throwUnimplemented(key){settings.errorCode=402;settings.diagnostic='The value for key '+key+' has not been created yet.';return'false';}
function setData(key,val,obj){var ka=key.split(/\./);if(ka.length<2){obj[ka[0]]=val;}else{if(!obj[ka[0]]){obj[ka[0]]={};}
obj=obj[ka.shift()];setData(ka.join("."),val,obj);}}
function getData(key,obj){var ka=key.split(/\./),v;if(ka.length<2){try{return obj[ka[0]];}catch(e){throwUnimplemented(key);return'false';}}else{v=ka.shift();if(obj[v]){return getData(ka.join("."),obj[v]);}
throwUnimplemented(key);return'false';}}
function cmiGetValue(key){var r="false";switch(key){case"cmi.exit":case"cmi.session_time":settings.errorCode=405;settings.diagnostic="Sorry, this has been specified as a read-only value for "+key;break;default:r=getData(key.substr(4,key.length),cmi);if(r===undefined||r===null){settings.errorCode=401;settings.diagnostic="Sorry, there was a undefined response from "+key;r="false";}
scorm.debug(settings.prefix+": GetValue "+key+" = "+r,4);break;}
return r;}
function isReadOnly(key){var tiers=key.split("."),v=tiers[tiers.length-1];if(tiers[0]==="adl"&&tiers[4]==="id"){return true;}
if(tiers[1]==="comments_from_lms"){return true;}
return read_only.indexOf('|'+v+'|')>=0;}
function isWriteOnly(key){var tiers=key.split("."),v=tiers[tiers.length-1];return write_only.indexOf('|'+v+'|')>=0;}
function roundVal(v){var dec=2;return Math.round(v*Math.pow(10,dec))/Math.pow(10,dec);}
function getObjLength(obj){var name,length=0;for(name in obj){if(obj.hasOwnProperty(name)){length+=1;}}
return length;}
function suspendDataUsageStatistic(){return roundVal((cmi.suspend_data.length/64000)*100)+"%";}
this.isRunning=function(){return settings.initialized===1&&settings.terminated===0;};this.Initialize=function(){scorm.debug(settings.prefix+":  Initializing...",3);cmi=CMI;settings.initialized=1;settings.terminated=0;return'true';};this.GetValue=function(key){settings.errorCode=0;var r="false",k=key.toString(),tiers=[];if(this.isRunning()){if(isWriteOnly(k)){scorm.debug(settings.prefix+": This "+k+" is write only",4);settings.errorCode=405;return"false";}
tiers=k.toLowerCase().split(".");switch(tiers[0]){case"cmi":r=cmiGetValue(k);break;case"ssp":break;case"adl":break;}
return r;}
settings.errorCode=123;return r;};this.SetValue=function(key,value){scorm.debug(settings.prefix+": SetValue: "+key+" = "+value,4);settings.errorCode=0;var s,tiers=[],k=key.toString(),v=value.toString(),z=0,count=0,arr=[];if(this.isRunning()){if(isReadOnly(k)){scorm.debug(settings.prefix+": This "+k+" is read only",4);settings.errorCode=404;return"false";}
tiers=k.split(".");switch(tiers[0]){case"cmi":switch(key){case"cmi.location":if(v.length>1000){scorm.debug(settings.prefix+": Some LMS's might truncate your bookmark as you've passed "+v.length+" characters of bookmarking data",2);}
break;case"cmi.completion_status":if(completion_status.indexOf('|'+v+'|')===-1){return throwVocabError(key,v);}
break;case"cmi.exit":if(exit.indexOf('|'+v+'|')===-1){return throwVocabError(key,v);}
break;default:switch(tiers[1]){case"comments_from_lms":settings.errorCode="404";settings.diagnostic="The cmi.comments_from_lms element is entirely read only.";return'false';case"interactions":if(cmi.interactions._children.indexOf(tiers[3])===-1){return throwVocabError(key,v);}
cmi.interactions._count=(getObjLength(cmi.interactions)-2).toString();if(parseInt(tiers[2],10)==="NaN"){return'false';}
if(cmi.interactions[tiers[2]]===undefined){cmi.interactions[tiers[2]]={};}
if(cmi.interactions[tiers[2]].objectives===undefined){scorm.debug(settings.prefix+": Constructing objectives object for new interaction",4);cmi.interactions[tiers[2]].objectives={};cmi.interactions[tiers[2]].objectives._count="-1";cmi.interactions[tiers[2]].objectives._children="id,score,success_status,completion_status,description";}
if(cmi.interactions[tiers[2]].correct_responses===undefined){scorm.debug(settings.prefix+": Constructing correct responses object for new interaction",4);cmi.interactions[tiers[2]].correct_responses={};cmi.interactions[tiers[2]].correct_responses._count="-1";}
if(tiers[3]==='objectives'){if(cmi.interactions[tiers[2]].objectives._children.indexOf(tiers[5])===-1){return throwVocabError(key,v);}
cmi.interactions[tiers[2]].objectives._count=(getObjLength(cmi.interactions[tiers[2]].objectives)-1).toString();}
if(tiers[3]==='correct_responses'){scorm.debug("Setting correct responses count to "+(getObjLength(cmi.interactions[tiers[2]].correct_responses)).toString());cmi.interactions[tiers[2]].correct_responses._count=(getObjLength(cmi.interactions[tiers[2]].correct_responses)).toString();}
break;case"objectives":if(tiers[3]==="id"){count=parseInt(cmi.objectives._count,10);for(z=0;z<count;z+=1){if(cmi.objectives[z].id===v){settings.errorCode="351";settings.diagnostic="The objectives.id elmeent must be unique.  The value '"+v+"' has already been set in objective #"+z;return'false';}}}
if(tiers[3]!=="id"){arr=parseInt(tiers[2],10);if(cmi.objectives[arr]===undefined){settings.errorCode="408";settings.diagnostic="The objectives.id element must be setbefore other elements can be set";return'false';}}
cmi.objectives._count=(getObjLength(cmi.objectives)-2).toString();if(parseInt(tiers[2],10)==="NaN"){return'false';}
break;}
break;}
setData(k.substr(4,k.length),v,cmi);break;case"ssp":break;case"adl":break;}
return"true";}
if(settings.terminated){settings.errorCode=133;}else{settings.errorCode=132;}
return"false";};this.Commit=function(){scorm.debug(settings.prefix+": Commit CMI Object:",4);scorm.debug(cmi);scorm.debug(settings.prefix+": Suspend Data Usage "+suspendDataUsageStatistic());return'true';};this.Terminate=function(){settings.terminated=1;settings.initialized=0;return'true';};this.GetErrorString=function(param){if(param!==""){var nparam=parseInt(param,10);if(errors[nparam]!==undefined){return errors[nparam];}}
return"";};this.GetLastError=function(){return settings.errorCode;};this.GetDiagnostic=function(){return settings.diagnostic;};}
function SCORM_API(options){"use strict";var defaults={version:"1.1",createDate:"04/05/2011 08:56AM",modifiedDate:"01/10/2013 5:28PM",debug:false,isActive:false,throw_alerts:false,prefix:"SCORM_API",exit_type:"suspend",success_status:"unknown",use_standalone:true,standalone:false,completion_status:"unknown",time_type:"GMT"},settings=$.extend(defaults,options),isError=0,error={0:"No Error",404:"Not Found",405:"Prevented on a read only resource"},API={connection:false,version:"none",mode:"",path:false,data:{completion_status:settings.completion_status,success_status:settings.success_status,exit_type:settings.exit_type},isActive:settings.isActive},self=this;settings.error=error;settings.startDate={};function noconsole(msg,lvl){$(self).triggerHandler({'type':"debug",'msg':msg,'lvl':lvl});}
function debug(msg,lvl){if(settings.debug){if(!window.console){window.console={};window.console.info=noconsole;window.console.log=noconsole;window.console.warn=noconsole;window.console.error=noconsole;window.console.trace=noconsole;}
switch(lvl){case 1:console.error(msg);break;case 2:console.warn(msg);break;case 4:console.info(msg);break;case 3:console.log(msg);break;default:console.log(msg);return false;}
return true;}
if(lvl<3&&settings.throw_alerts){alert(msg);}
return false;}
function findAPI(win){var attempts=0,limit=500;while((!win.API&&!win.API_1484_11)&&(win.parent)&&(win.parent!==win)&&(attempts<=limit)){attempts+=1;win=win.parent;}
if(win.API_1484_11){API.version="2004";API.path=win.API_1484_11;}else if(win.API){API.version="1.2";API.path=win.API;}else{return false;}
return true;}
function centisecsToISODuration(n,bPrecise){var str="P",nCs=Math.max(n,0),nY=0,nM=0,nD=0,nH,nMin;nCs=Math.round(nCs);if(bPrecise===true){nD=Math.floor(nCs/8640000);}else{nY=Math.floor(nCs/3155760000);nCs-=nY*3155760000;nM=Math.floor(nCs/262980000);nCs-=nM*262980000;nD=Math.floor(nCs/8640000);}
nCs-=nD*8640000;nH=Math.floor(nCs/360000);nCs-=nH*360000;nMin=Math.floor(nCs/6000);nCs-=nMin*6000;if(nY>0){str+=nY+"Y";}
if(nM>0){str+=nM+"M";}
if(nD>0){str+=nD+"D";}
if((nH>0)||(nMin>0)||(nCs>0)){str+="T";if(nH>0){str+=nH+"H";}
if(nMin>0){str+=nMin+"M";}
if(nCs>0){str+=(nCs/100)+"S";}}
if(str==="P"){str="PT0H0M0S";}
return str;}
function padTime(n){return n<10?'0'+n:n;}
function isoDateToStringUTC(d){return d.getUTCFullYear()+'-'+padTime(d.getUTCMonth()+1)+'-'+padTime(d.getUTCDate())+'T'+padTime(d.getUTCHours())+':'+padTime(d.getUTCMinutes())+':'+padTime(d.getUTCSeconds())+"."+Math.round((d.getUTCMilliseconds()/1000)%1000)+'Z';}
function isoDateToString(d){var offset=d.getTimezoneOffset()>0?'-':'+';return d.getFullYear()+'-'+padTime(d.getMonth()+1)+'-'+padTime(d.getDate())+'T'+padTime(d.getHours())+':'+padTime(d.getMinutes())+':'+padTime(d.getSeconds())+"."+Math.round((d.getMilliseconds()/1000)%1000)+offset+padTime(d.getTimezoneOffset()/60)+':00';}
function isoStringToDate(str){var MM=["January","February","March","April","May","June","July","August","September","October","November","December"],d,uoffset,offset=0,mil=0,dd;switch(settings.time_type){case"UTC":d=str.replace(/(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(?:\.(\d+))(|Z)/,function($0,$Year,$Month,$Day,$Hour,$Min,$Sec){return MM[$Month-1]+" "+$Day+", "+$Year+" "+$Hour+":"+$Min+":"+$Sec;});dd=new Date.UTC(d);return dd;case"GMT":d=str.replace(/(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})(?:\.(\d+))([\+|\-]\d+:\d+)/,function($0,$Year,$Month,$Day,$Hour,$Min,$Sec,$Ms,$Offset){offset=parseInt($Offset.substring(1,$Offset.length),10)*60*60*60;mil=$Ms;return MM[$Month-1]+" "+$Day+", "+$Year+" "+$Hour+":"+$Min+":"+$Sec;});dd=new Date(d);uoffset=dd.getTimezoneOffset()*60*60;if(uoffset!==offset){dd=new Date(dd.getTime()+offset+uoffset);dd.setMilliseconds(mil);}
return dd;default:d=str.replace(/(\d{4})-(\d{2})-(\d{2})T(\d{2}):(\d{2}):(\d{2})/,function($0,$Year,$Month,$Day,$Hour,$Min,$Sec){return MM[$Month-1]+" "+$Day+", "+$Year+" "+$Hour+":"+$Min+":"+$Sec;});dd=new Date(d);return dd;}}
function centisecsToSCORM12Duration(n){var bTruncated=false,str,nH,nCs,nM,nS;n=Math.round(n);nH=Math.floor(n/360000);nCs=n-nH*360000;nM=Math.floor(nCs/6000);nCs=nCs-nM*6000;nS=Math.floor(nCs/100);nCs=nCs-nS*100;str="0000"+nH+":";str=str.substr(str.length-5,5);if(nM<10){str+="0";}
str+=nM+":";if(nS<10){str+="0";}
str+=nS;if(nCs>0){str+=".";if(nCs<10){str+="0";}
str+=nCs;}
return str;}
function makeBoolean(str){if(str===undefined){debug(settings.prefix+" : makeBoolean was given empty string, converting to false",2);return false;}
if(str===true||str===false){return Boolean(str);}
switch(str.toLowerCase()){case"true":case"yes":case"1":return true;case"false":case"no":case"0":case null:return false;default:return Boolean(str);}}
function triggerWarning(n){debug(error[n],2);return true;}
function triggerException(msg){$(self).triggerHandler({'type':'exception','error':msg});}
function getLastErrorCode(){var lms=API.path,code=0;if(lms){switch(API.version){case"1.2":code=parseInt(lms.LMSGetLastError(),10);break;case"2004":code=parseInt(lms.GetLastError(),10);break;default:break;}}
return code;}
function getLastErrorMessage(n){var lms=API.path,result='No LMS Connectivity';if(lms){switch(API.version){case"1.2":result=lms.LMSGetErrorString(n.toString());break;case"2004":result=lms.GetErrorString(n.toString());break;default:break;}}
return String(result);}
function getDiagnostic(n){var lms=API.path,result='No LMS Connectivity';if(lms){switch(API.version){case"1.2":result=lms.LMSGetDiagnostic(n.toString());break;case"2004":result=lms.GetDiagnostic(n.toString());break;default:break;}}
return String(result);}
this.getvalue=function(n){var v=null,lms=API.path,ec=0,nn=null,ig=false;$(self).triggerHandler({'type':"getvalue",'n':n});if(API.isActive){switch(API.version){case"1.2":switch(n){case"cmi.location":nn="cmi.core.lesson_location";break;case"cmi.completion_threshold":ig=true;break;case"cmi.mode":nn="cmi.core.lesson_mode";break;case"cmi.exit":nn="cmi.core.exit";break;case"cmi.score.raw":nn="cmi.core.score.raw";break;case"cmi.score.min":nn="cmi.core.score.min";break;case"cmi.score.max":nn="cmi.core.score.max";break;case"cmi.success_status":case"cmi.completion_status":nn="cmi.core.lesson_status";break;case"cmi.session_time":nn="cmi.core.session_time";break;case"cmi.suspend_data":nn=n;break;default:nn=n;break;}
if(ig){return'false';}
v=lms.LMSGetValue(nn);break;case"2004":v=lms.GetValue(n);break;default:break;}
ec=getLastErrorCode();if(ec===0||ec===403){if(typeof v==='undefined'||v===null||v==='null'){v="";}
return String(v);}
debug(settings.prefix+": Error\nError Code: "+ec+"\nError Message: "+getLastErrorMessage(ec)+"\nDiagnostic: "+getDiagnostic(ec),1);return'false';}
debug(settings.prefix+": "+n+" Get Aborted, connection not initialized! "+API.isActive,2);return'false';};this.setvalue=function(n,v){var s='false',lms=API.path,ec=0,nn=null,ig=false;$(self).triggerHandler({'type':"setvalue",'n':n,'v':v});if(API.isActive){switch(API.version){case"1.2":API.mode=API.mode===""?lms.LMSGetValue('cmi.core.lesson_mode'):API.mode;if(API.mode==="normal"){switch(n){case"cmi.location":if(v.length>255){debug(settings.prefix+": Warning, your bookmark is over the limit!!",2);}
nn="cmi.core.lesson_location";break;case"cmi.completion_threshold":ig=true;break;case"cmi.mode":nn="cmi.core.lesson_mode";break;case"cmi.exit":nn="cmi.core.exit";API.exit_type=v;break;case"cmi.score.raw":nn="cmi.core.score.raw";break;case"cmi.score.min":nn="cmi.core.score.min";break;case"cmi.score.max":nn="cmi.core.score.max";break;case"cmi.success_status":case"cmi.completion_status":nn="cmi.core.lesson_status";API.data.completion_status=v;break;case"cmi.session_time":nn="cmi.core.session_time";break;case"cmi.suspend_data":if(v.length>4096){debug(settings.prefix+": Warning, your suspend data is over the limit!!",2);}
nn=n;break;default:nn=n;break;}
if(ig){return'false';}
s=lms.LMSSetValue(nn,v);}else{debug(settings.prefix+": Warning, you are not in normal mode.  Ignoring 'set' requests.",2);return'false';}
break;case"2004":API.mode=API.mode===""?lms.GetValue('cmi.mode'):API.mode;if(API.mode==="normal"){switch(n){case"cmi.location":if(v.length>1000){debug(settings.prefix+": Warning, your bookmark is over the limit!!",2);}
break;case"cmi.completion_status":API.data.completion_status=v;break;case"cmi.success_status":API.data.success_status=v;break;case"cmi.exit":API.data.exit_type=v;break;case"suspend_data":if(v.length>64000){debug(settings.prefix+": Warning, your suspend data is over the limit!!",2);}
break;default:break;}
s=lms.SetValue(n,v);}else{debug(settings.prefix+": Warning, you are not in normal mode.  Ignoring 'set' requests.",2);return'false';}
break;default:break;}
ec=getLastErrorCode();if(ec===0||ec===403){return s;}else{debug(settings.prefix+": Error\nError Code: "+ec+"\nError Message: "+getLastErrorMessage(ec)+" for "+n+"\nDiagnostic: "+getDiagnostic(ec),1);return s;}}
debug(settings.prefix+": "+n+" Set Aborted, connection not initialized! Locate where you called it after you Terminated.",2);return'false';};this.commit=function(){var s='false',lms=API.path,ec=0,session_secs,saveDate=new Date();session_secs=(saveDate.getTime()-settings.startDate.getTime())/1000;if(API.isActive){debug(settings.prefix+": Committing data",3);switch(API.version){case"1.2":self.setvalue("cmi.core.session_time",centisecsToSCORM12Duration(session_secs*100));s=lms.LMSCommit("");break;case"2004":self.setvalue("cmi.session_time",centisecsToISODuration(session_secs*100,true));s=lms.Commit("");break;default:break;}
ec=getLastErrorCode();if(ec===0){return s;}
debug(settings.prefix+": Error\nError Code: "+ec+"\nError Message: "+getLastErrorMessage(ec)+" for Commit.\nDiagnostic: "+getDiagnostic(ec),1);return'false';}
debug(settings.prefix+": Commit Aborted, connection not initialized!",2);return'false';};this.initialize=function(){debug(settings.prefix+": Initialize Called. \n\tversion: "+settings.version+"\n\tModified: "+settings.modifiedDate,3);var s=false,lms=API.path,ec=0;if(!API.isActive){if(lms){switch(API.version){case"1.2":s=makeBoolean(lms.LMSInitialize(""));break;case"2004":s=makeBoolean(lms.Initialize(""));break;default:break;}
ec=getLastErrorCode();console.log('>>>>>>>>>>>>>>>>>>>>>>>>>>'+s+'>>>>>>>>>>>>>>>>>>>>>>>>');if(s&&ec===0){API.isActive=true;API.data.completion_status=self.getvalue('cmi.completion_status');settings.startDate=new Date();debug(settings.prefix+": SCO is initialized.",3);switch(API.data.completion_status){case"not attempted":case"unknown":self.setvalue("cmi.completion_status","incomplete");break;default:if(API.data.completion_status===''){triggerException("LMS compatibility issue, Please notify a administrator.  Completion Status is empty.");}
break;}
return'true';}
debug(settings.prefix+": Error\nError Code: "+ec+"\nError Message: "+getLastErrorMessage(ec)+" for Initialize.\nDiagnostic: "+getDiagnostic(ec),1);}else{debug(settings.prefix+": Aborted, LMS could not be located!.",2);}}else{debug(settings.prefix+": Aborted, connection already initialized!.",2);}
return'false';};this.terminate=function(){var s=false,lms=API.path,ec=0;debug(settings.prefix+": Terminating "+API.isActive+" "+lms,4);if(API.isActive){if(lms){debug(settings.prefix+": completion_status = "+API.data.completion_status+"|| success_status = "+API.data.success_status,3);self.commit();switch(API.version){case"1.2":s=lms.LMSFinish("");break;case"2004":s=lms.Terminate("");break;default:break;}
if(makeBoolean(s)){debug(settings.prefix+": Terminated.",3);API.isActive=false;}else{ec=getLastErrorCode();debug(settings.prefix+": Error\nError Code: "+ec+"\nError Message: "+getLastErrorMessage(ec)+" for Commit.\nDiagnostic: "+getDiagnostic(ec),1);}}else{debug(settings.prefix+": Lost connection to LMS",2);}}else{debug(settings.prefix+": Terminate Aborted, connection not initialized!",2);}
return s;};this.getObjectiveByID=function(id){var count=self.getvalue("cmi.objectives._count"),i,tID;scorm.debug(settings.prefix+": Set Objective - Begin search, Objective count is "+count,4);if(count===''||count==='false'||count==='-1'){return'false';}
count=parseInt(count,10)-1;for(i=count;i>=0;i-=1){tID=self.getvalue("cmi.objectives."+i+".id");if(id===tID){scorm.debug(settings.prefix+": Objective ID Match on "+i,4);return i;}}
return'false';};this.getInteractionByID=function(id){var count=self.getvalue("cmi.interactions._count"),i,tID;if(count===""||count==='false'||count==='-1'){return'false';}
count=parseInt(count,10)-1;scorm.debug(settings.prefix+": Getting interactions from count "+count,4);for(i=count;i>=0;i-=1){tID=this.getvalue("cmi.interactions."+i+".id");if(id===tID){scorm.debug(settings.prefix+": Interaction By ID Returning "+i);return i;}}
return'false';};this.getInteractionObjectiveByID=function(n,id){var count=self.getvalue("cmi.interactions."+n+".objectives._count"),i,tID;if(count===""||count==='false'){return'0';}
count=parseInt(count,10)-1;scorm.debug(settings.prefix+": Getting interaction objectives from count "+count,4);for(i=count;i>=0;i-=1){tID=self.getvalue("cmi.interactions."+n+".objectives."+i+".id");if(id===tID){scorm.debug(settings.prefix+": Interaction Objective By ID Returning "+i);return i;}}
return'false';};this.getInteractionCorrectResponsesByPattern=function(n,pattern){var count=self.getvalue("cmi.interactions."+n+".correct_responses._count"),i,p;if(count===""||count==='false'){scorm.debug(settings.prefix+": Correct Responses pattern was empty or false",4);return'0';}
count=parseInt(count,10)-1;scorm.debug(settings.prefix+": Getting interaction correct responses from count "+count,4);for(i=count;i>=0;i-=1){p=self.getvalue("cmi.interactions."+n+".correct_responses."+i+".pattern");if(pattern===p){scorm.debug(settings.prefix+": Interaction Correct Responses By Pattern Returning "+i);return i;}}
return'false';};this.init=function(){if(window.parent&&window.parent!==window){findAPI(window.parent);}
if(!API.path&&window.top.opener){findAPI(window.top.opener);}
if(API.path){API.connection=true;return true;}
debug(settings.prefix+": I was unable to locate an API for communication",2);if(settings.use_standalone){debug(settings.prefix+": If you included Local_API_1484_11 I'll mimic the LMS.  If not, all SCORM calls will fail.",4);settings.standalone=true;API.version="2004";API.path=typeof(Local_API_1484_11)==='function'?new Local_API_1484_11():null;return true;}
return false;};this.getLastError=function(n){return error[n];};this.set=function(n,v){switch(n){case"version":case"createDate":case"modifiedDate":case"prefix":triggerWarning(405);return false;case"isActive":API.isActive=v;settings[n]=v;break;case"startDate":settings[n]=new Date(v);break;default:settings[n]=v;break;}
return(isError!==0);};this.get=function(n){if(settings[n]===undefined){triggerWarning(404);return false;}
return settings[n];};this.centisecsToSCORM12Duration=centisecsToSCORM12Duration;this.centisecsToISODuration=centisecsToISODuration;this.isoDateToStringUTC=isoDateToStringUTC;this.isoDateToString=isoDateToString;this.isoStringToDate=isoStringToDate;this.makeBoolean=makeBoolean;this.debug=debug;this.init();}
function SCOBot(options){"use strict";var defaults={version:"1.1",createDate:"04/07/2011 09:33AM",modifiedDate:"01/10/2013 5:09PM",prefix:"SCOBot",launch_data:{},interaction_mode:"state",launch_data_type:"querystring",scorm_edition:"3rd",success_status:"unknown",location:"",completion_status:"",suspend_data:{pages:[]},mode:"",completion_threshold:0,scaled_passing_score:0.7,totalInteractions:0,totalObjectives:0,startTime:0},settings=$.extend(defaults,options),lmsconnected=false,isExit=false,isError=false,isStarted=false,badValues='|null|undefined|false|| |',error=scorm.get('error'),self=this;function initSCO(){lmsconnected=scorm.initialize();scorm.debug(settings.prefix+": SCO Loaded from window.onload "+lmsconnected,4);if(lmsconnected){self.start();$(self).triggerHandler({'type':"load"});}
return lmsconnected;}
function exitSCO(){if(!isExit){isExit=true;$(self).triggerHandler({'type':"unload"});if(scorm.get('exit_type')==="finish"){self.finish();}else{self.suspend();}
scorm.debug(settings.prefix+": SCO is done unloading.",4);}
return isExit;}
function triggerWarning(n){scorm.debug(error[n],2);return true;}
function triggerException(msg){$(self).triggerHandler({'type':'exception','error':msg});}
function isPassed(){var success=scorm.getvalue('cmi.success_status');return!(success!=="passed"&&success!=="failed");}
function verifyScoreScaled(){var success=scorm.getvalue('cmi.success_status');if(success==='passed'&&scorm.get('exit_type')==="finish"){if(scorm.getvalue('cmi.score.scaled')==='false'){if(scorm.getvalue('cmi.score.max')==='1'){scorm.setvalue('cmi.score.scaled','1');}}}}
function isBadValue(v){return badValues.indexOf('|'+v+'|')>=0;}
function cleanseData(str){var cleanseExp=/[^\f\r\n\t\v\0\s\S\w\W\d\D\b\\B\\cX\\xhh\\uhhh]/gi;return str.replace(cleanseExp,'');}
function isISO8601(v){var iso8601Exp;switch(scorm.get('time_type')){case"UTC":iso8601Exp=/^(\d{4})-0?(\d+)-0?(\d+)[T ]0?(\d+):0?(\d+):0?(\d+)(?:\.(\d+))(|Z)$/;break;case"GMT":iso8601Exp=/^(\d{4})-0?(\d+)-0?(\d+)[T ]0?(\d+):0?(\d+):0?(\d+)(?:\.(\d+))[\+\-]\d{2}:\d{2}$/;break;default:iso8601Exp=/^(\d{4})-0?(\d+)-0?(\d+)[T ]0?(\d+):0?(\d+):0?(\d+)$/;break;}
return iso8601Exp.test(v);}
function notStartedYet(){scorm.debug(settings.prefix+": You didn't call 'start()' yet, or you already terminated, ignoring.",2);return'false';}
function currentTime(){var d=new Date();return d.getTime()+(Date.remoteOffset||0);}
function trueRound(v,dec){var num=parseFloat(v);return parseFloat(num.toPrecision(dec));}
function findResponseType(type,str){var reg=0;switch(type){case"order_matters":reg=/^\{order_matters=.*?\}/;break;case"case_matters":reg=/^\{case_matters=.*?\}/;break;case"lang":reg=/^\{lang=.*?\}/;break;default:scorm.debug(settings.prefix+": Sorry, this is not a valid Response type.",1);break;}
return reg.exec(str);}
function encodeInteractionType(type,value){var str='',i=0,arr=[];switch(type){case'true-false':value=value.toString();if(value==='true'||value==='false'){return value;}
scorm.debug(settings.prefix+": Developer, you're not passing true or false for true-false.  I got "+value+" instead",1);return'';case'choice':case'sequencing':if($.isArray(value)){str=value.join("[,]");value=str;}else{scorm.debug(settings.prefix+": Developer, you're not passing a array type for sequencing/choice.  I got "+typeof(value)+" instead\n"+JSON.stringify(value),1);value='';}
return value;case'fill-in':if($.isPlainObject(value)){if(value.case_matters!==undefined){str+="{case_matters="+value.case_matters+"}";}
if(value.order_matters!==undefined){str+="{order_matters="+value.order_matters+"}";}
if(value.lang!==undefined){str+="{lang="+value.lang+"}";}
str+=value.words.join("[,]");value=str;}else{scorm.debug(settings.prefix+": Developer, you're not passing a object type for fill in.  I got "+typeof(value)+" instead",1);value='';}
return value;case'long-fill-in':if($.isPlainObject(value)){if(value.case_matters!==undefined){str+="{case_matters="+value.case_matters+"}";}
if(value.lang!==undefined){str+="{lang="+value.lang+"}";}
str+=value.text;value=str;}else{scorm.debug(settings.prefix+": Developer, you're not passing a object type for long fill in.  I got "+typeof(value)+" instead",1);value='';}
return value;case'matching':if($.isArray(value)){for(i=0;i<value.length;i+=1){if($.isArray(value[i])){arr.push(value[i].join("[.]"));}else{scorm.debug(settings.prefix+": Developer, you're not passing a array type for matching/performance.  I got "+typeof(value)+" instead",1);return'';}}
str=arr.join("[,]");value=str;}else{scorm.debug(settings.prefix+": Developer, you're not passing a array type for matching/performance.  I got "+typeof(value)+" instead",1);value='';}
return value;case'performance':if(!$.isArray(value)){if(value.order_matters!==undefined){str+="{order_matters="+value.order_matters+"}";}
if($.isArray(value.answers)){for(i=0;i<value.answers.length;i+=1){if($.isArray(value.answers[i])){arr.push(value.answers[i].join("[.]"));}else{scorm.debug(settings.prefix+": Developer, you're not passing a array type for performance correct response.  I got "+typeof(value.answers[i])+" instead on "+i,1);scorm.debug(value,1);return'';}}
str+=arr.join("[,]");}else{scorm.debug(settings.prefix+": Developer, you're not passing a array type for performance correct response.  I got "+typeof(value.answers)+" instead",1);scorm.debug(value,1);}}else{if(typeof($.isArray(value))){for(i=0;i<value.length;i+=1){if($.isArray(value[i])){arr.push(value[i].join("[.]"));}else{scorm.debug(settings.prefix+": Developer, you're not passing a array type for performance learner response.  I got "+typeof(value[i])+" instead on "+i,1);scorm.debug(value,1);return'';}}
str=arr.join("[,]");}else{scorm.debug(settings.prefix+": Developer, you're not passing a array type for performance learner response.  I got "+typeof(value)+" instead",1);value='';}}
value=str;return value;case'numeric':if(typeof(value)==="number"){value=value.toString();}else{str=parseFloat(value);if(str==="NaN"){scorm.debug(settings.prefix+": Developer, your not passing a number for a numeric interaction.  I got "+value+" instead",1);}}
return value;case'likert':case'other':return value.toString();default:scorm.debug(settings.prefix+": Sorry, invalid interaction type detected for "+type+" on "+value,1);return false;}}
function decodeInteractionType(type,value){var i=0,arr=[],obj={},match=false;switch(type){case'true-false':return value;case'choice':case'sequencing':arr=value.split("[,]");value=arr;return value;case'fill-in':arr=findResponseType('case_matters',value);if(arr!==null){if(arr[0].search(/^\{case_matters=(true|false)\}$/)!==-1){obj.case_matters=arr[0].substring('{case_matters='.length,arr[0].length-1);value=value.substring(arr[0].length,value.length);scorm.debug("=== case matters"+value,4);}}
arr=findResponseType('order_matters',value);if(arr!==null){if(arr[0].search(/^\{order_matters=(true|false)\}$/)!==-1){obj.order_matters=arr[0].substring('{order_matters='.length,arr[0].length-1);value=value.substring(arr[0].length,value.length);scorm.debug("=== order matters"+value,4);}}
arr=findResponseType('lang',value);if(arr!==null){if(arr[0].search(/^\{lang=.*?\}$/)!==-1){obj.lang=arr[0].substring('{lang='.length,arr[0].length-1);value=value.substring(arr[0].length,value.length);}}
obj.words=value.split("[,]");return obj;case'long-fill-in':arr=findResponseType('case_matters',value);if(arr!==null){if(arr[0].search(/^\{case_matters=(true|false)\}$/)!==-1){obj.case_matters=arr[0].substring('{case_matters='.length,arr[0].length-1);value=value.substring(arr[0].length,value.length);scorm.debug("=== case matters"+value,4);}}
arr=findResponseType('lang',value);if(arr!==null){if(arr[0].search(/^\{lang=.*?\}$/)!==-1){obj.lang=arr[0].substring('{lang='.length,arr[0].length-1);value=value.substring(arr[0].length,value.length);}}
obj.text=value;return obj;case'matching':arr=value.split("[,]");for(i=0;i<arr.length;i+=1){arr[i]=arr[i].split("[.]");}
return arr;case'performance':arr=findResponseType('order_matters',value);if(arr!==null){if(arr[0].search(/^\{order_matters=(true|false)\}$/)!==-1){match=true;obj.order_matters=arr[0].substring('{order_matters='.length,arr[0].length-1);value=value.substring(arr[0].length,value.length);scorm.debug("=== order matters"+value,4);}}
arr=value.split("[,]");for(i=0;i<arr.length;i+=1){arr[i]=arr[i].split("[.]");}
if(match){obj.answers=arr;return obj;}
return arr;case'numeric':case'likert':case'other':return value;default:scorm.debug(settings.prefix+": Sorry, invalid interaction type detected for "+type+" on "+value,1);return false;}}
function setSuspendData(){var result;result=scorm.setvalue('cmi.suspend_data',cleanseData(JSON.stringify(settings.suspend_data)));if(result==='true'){scorm.debug(settings.prefix+": Suspend Data saved",4);scorm.debug(settings.suspend_data,4);return'true';}
scorm.debug(settings.prefix+": Sorry, there was an issue saving your suspend data, please review the SCORM Logs",1);return'false';}
function checkProgress(){if(isStarted){var scoreRaw=0,tmpRaw=0,scoreMax=0,scoreMin=0,scoreScaled=1,progressMeasure,totalObjectivesCompleted=0,i=0,count;if(settings.totalInteractions===0||settings.totalObjectives===0){scorm.debug(settings.prefix+": Sorry, I cannot calculate Progress as the totalInteractions and or Objectives are zero",2);return'false';}
count=parseInt(scorm.getvalue('cmi.objectives._count'),10);scorm.debug(settings.prefix+" Count is "+count);if(count>0){count=count-1;for(i=count;i>=0;i-=1){tmpRaw=parseFloat(scorm.getvalue('cmi.objectives.'+i+'.score.raw'));scorm.debug('Score Raw: '+tmpRaw);if(!isNaN(tmpRaw)){scoreRaw+=parseFloat(tmpRaw);}else{scorm.debug(settings.prefix+" We got a NaN converting objectives."+i+".score.raw",2);}
if(scorm.getvalue('cmi.objectives.'+i+'.completion_status')==='completed'){totalObjectivesCompleted+=1;}}}
scorm.debug(settings.prefix+"Setting score "+scorm.setvalue('cmi.score.raw',scoreRaw.toString()));if((settings.scoreMax-settings.scoreMin)===0){scorm.debug(settings.prefix+": Division by Zero for scoreMax - scoreMin "+settings.scoreMax,2);scorm.setvalue('cmi.score.scaled',scoreScaled);}else{scoreScaled=((scoreRaw-settings.scoreMin)/(settings.scoreMax-settings.scoreMin)).toString();scorm.debug(settings.prefix+": Score Scaled = "+scoreScaled,3);scorm.setvalue('cmi.score.scaled',trueRound(scoreScaled,7));}
progressMeasure=(totalObjectivesCompleted/settings.totalObjectives).toString();scorm.setvalue('cmi.progress_measure',trueRound(progressMeasure,7));if(parseFloat(progressMeasure)>=parseFloat(settings.completion_threshold)){scorm.setvalue('cmi.completion_status','completed');}else{scorm.setvalue('cmi.completion_status','incomplete');}
if(parseFloat(scoreScaled)>=parseFloat(settings.scaled_passing_score)){scorm.setvalue('cmi.success_status','passed');}else{scorm.setvalue('cmi.success_status','failed');}
return{score_scaled:scorm.getvalue('cmi.score.scaled'),success_status:scorm.getvalue('cmi.success_status'),progress_measure:scorm.getvalue('cmi.progress_measure'),completion_status:scorm.getvalue('cmi.completion_status')};}
return notStartedYet();}
function getCommentsFromLMS(){if(isStarted){var p1="cmi.comments_from_lms.",count=scorm.getvalue(p1+'_count'),response=[],obj={},i;if(!isBadValue(count)){return'false';}
count-=1;for(i=0;i<=count;i+=1){p1+=i+'.';obj.comment=scorm.getvalue(p1+'comment');obj.location=scorm.getvalue(p1+'location');obj.timestamp=scorm.getvalue(p1+'timestamp');response.push(obj);obj={};}
return response;}
return notStartedYet();}
function updateStatus(){verifyScoreScaled();if(!isPassed()){scorm.setvalue('cmi.success_status','unknown');}
if(scorm.get("success_status")==='passed'){scorm.setvalue('cmi.success_status','passed');}
if(scorm.getvalue('cmi.completion_status')!=="completed"){scorm.setvalue('cmi.completion_status','incomplete');}
if(scorm.get("completion_status")==="completed"){scorm.setvalue('cmi.completion_status','completed');}}
this.start=function(){var tmpCompletionThreshold='',tmpScaledPassingScore='',tmpLaunchData='';scorm.debug(settings.prefix+": I am starting...",3);if(!isStarted){isStarted=true;settings.startTime=currentTime();tmpLaunchData=scorm.getvalue('cmi.launch_data');if(settings.launch_data_type==="json"){settings.launch_data=JSON.parse(tmpLaunchData);}else{tmpLaunchData.replace(new RegExp("([^?=&]+)(=([^&]*))?","g"),function($0,$1,$2,$3){settings.launch_data[$1]=$3;});}
scorm.debug(settings.prefix+": Launch Data:",4);scorm.debug(settings.launch_data,4);settings.mode=scorm.getvalue('cmi.mode');settings.entry=scorm.getvalue('cmi.entry');if(settings.entry===''||settings.entry==='resume'){settings.location=scorm.getvalue('cmi.location');settings.suspend_data=(scorm.getvalue('cmi.suspend_data'));if(settings.suspend_data.length>0&&!isBadValue(settings.suspend_data)){scorm.debug(settings.prefix+": Returning suspend data object from a prior session",4);settings.suspend_data=JSON.parse(settings.suspend_data);scorm.debug(settings.suspend_data,4);if(settings.entry===""){settings.entry="resume";}}else{scorm.debug(settings.prefix+": Creating new suspend data object",4);}}else{scorm.debug(settings.prefix+": First time running this SCO based on LMS entry value.",4);scorm.debug(settings.prefix+": Creating new suspend data object",4);}
tmpCompletionThreshold=scorm.getvalue('cmi.completion_threshold');if(!isBadValue(tmpCompletionThreshold)&&tmpCompletionThreshold!=="-1"){settings.completion_threshold=tmpCompletionThreshold;}
tmpScaledPassingScore=scorm.getvalue('cmi.scaled_passing_score');if(!isBadValue(tmpScaledPassingScore)&&tmpScaledPassingScore!=="-1"){settings.scaled_passing_score=tmpScaledPassingScore;}
settings.completion_status=scorm.getvalue('cmi.completion_status');settings.success_status=scorm.getvalue('cmi.success_status');settings.comments_from_lms=getCommentsFromLMS();if(settings.comments_from_lms!=='false'){$(self).triggerHandler({'type':"comments_lms",'data':settings.comments_from_lms});}}else{scorm.debug(settings.prefix+": You already called start!  I don't see much point in doing this more than once.",2);return false;}
return true;};this.setTotals=function(data){if(isStarted){if(!isBadValue(data.totalInteractions)){settings.totalInteractions=data.totalInteractions;}
if(!isBadValue(data.totalObjectives)){settings.totalObjectives=data.totalObjectives;}
if(!isBadValue(data.scoreMin)){settings.scoreMin=trueRound(data.scoreMin,7);scorm.setvalue('cmi.score.min',data.scoreMin.toString());}
if(!isBadValue(data.scoreMax)){settings.scoreMax=trueRound(data.scoreMax,7);scorm.setvalue('cmi.score.max',data.scoreMax.toString());}
return'true';}
return notStartedYet();};this.getMode=function(){if(isStarted){return settings.mode;}
return notStartedYet();};this.getEntry=function(){if(isStarted){return settings.entry;}
return notStartedYet();};this.setBookmark=function(v){if(isStarted){settings.location=v.toString();return scorm.setvalue('cmi.location',settings.location);}
return notStartedYet();};this.getBookmark=function(){if(isStarted){return settings.location;}
return notStartedYet();};this.progress=checkProgress;this.setSuspendDataByPageID=function(id,title,data){if(isStarted){var i;for(i=0;i<settings.suspend_data.pages.length;i+=1){if(settings.suspend_data.pages[i].id===id){settings.suspend_data.pages[i].data=data;scorm.debug(settings.prefix+": Suspend Data Set",4);scorm.debug(settings.suspend_data,4);return'true';}}
settings.suspend_data.pages.push({'id':id,'title':title,'data':data});scorm.debug(settings.prefix+": Suspend Data set:",4);scorm.debug(settings.suspend_data,4);return'true';}
return notStartedYet();};this.getSuspendDataByPageID=function(id){if(isStarted){var i;for(i=0;i<settings.suspend_data.pages.length;i+=1){if(settings.suspend_data.pages[i].id===id){return settings.suspend_data.pages[i].data;}}
return'false';}
return notStartedYet();};this.getSecondsFromStart=function(){return settings.startTime-currentTime();};this.setInteraction=function(data){if(isStarted){var n,m,i,j,p,p1='cmi.interactions.',p2,orig_timestamp=data.timestamp||scorm.isoStringToDate(scorm.getvalue(p1+scorm.getInteractionByID(data.id)+'.timestamp')),timestamp,latency,result;if(!$.isPlainObject(data)){scorm.debug(settings.prefix+": Developer, your not passing a {object} argument!!  Got "+typeof(data)+" instead.",1);return'false';}
if(isBadValue(data.id)){scorm.debug(settings.prefix+": Developer, your passing a interaction without a ID\nSee question:\n"+data.description,1);return'false';}
if($.type(data.timestamp)==="date"){timestamp=scorm.isoDateToString(data.timestamp);}
data.timestamp=timestamp;if($.type(data.latency)==="date"){latency=(data.latency.getTime()-orig_timestamp.getTime())/1000;data.latency=scorm.centisecsToISODuration(latency*100,true);}else if(data.learner_response.length>0&&!isBadValue(data.learner_response)){data.latency=new Date();latency=(data.latency.getTime()-orig_timestamp.getTime())/1000;data.latency=scorm.centisecsToISODuration(latency*100,true);}
p2='_count';if(settings.interaction_mode==="journaled"){n=scorm.getvalue(p1+p2)==="-1"?'0':scorm.getvalue(p1+p2);}else{n=scorm.getInteractionByID(data.id);if(isBadValue(n)){n=scorm.getvalue(p1+p2)==="-1"?'0':scorm.getvalue(p1+p2);}}
p1+=n+".";if(!isBadValue(data.id)){result=scorm.setvalue(p1+'id',data.id);}
if(!isBadValue(data.type)){result=scorm.setvalue(p1+'type',data.type);}
p2='objectives._count';if(data.objectives!==undefined){for(i=0;i<data.objectives.length;i+=1){m=scorm.getInteractionObjectiveByID(n,data.objectives[i].id);if(m==='false'){m=scorm.getvalue(p1+p2)==='-1'?'0':scorm.getvalue(p1+p2);}
result=scorm.setvalue(p1+'objectives.'+m+'.id',data.objectives[i].id);}}
if(data.timestamp!==undefined){result=scorm.setvalue(p1+'timestamp',data.timestamp);}
p2='correct_responses._count';if($.isArray(data.correct_responses)){for(j=0;j<data.correct_responses.length;j+=1){p=scorm.getInteractionCorrectResponsesByPattern(n,data.correct_responses[j].pattern);scorm.debug(settings.prefix+": Trying to locate pattern "+data.correct_responses[j].pattern+" resulted in "+p,4);if(p==='false'){p=scorm.getvalue(p1+p2)==='-1'?0:scorm.getvalue(p1+p2);scorm.debug(settings.prefix+": p is now "+p,4);}
result=scorm.setvalue(p1+'correct_responses.'+p+'.pattern',encodeInteractionType(data.type,data.correct_responses[j].pattern));}}else{scorm.debug(settings.prefix+"Something went wrong with Correct Responses, it wasn't an Array.",1);}
if(!isBadValue(data.weighting)){result=scorm.setvalue(p1+'weighting',data.weighting);}
if(!isBadValue(data.learner_response)){result=scorm.setvalue(p1+'learner_response',encodeInteractionType(data.type,data.learner_response));}
if(!isBadValue(data.result)){result=scorm.setvalue(p1+'result',data.result);}
if(!isBadValue(data.latency)){result=scorm.setvalue(p1+'latency',data.latency);}
if(!isBadValue(data.description)){result=scorm.setvalue(p1+'description',data.description);}
return result;}
return notStartedYet();};this.getInteraction=function(id){if(isStarted){var n,p1='cmi.interactions.',m,p,i=0,obj={};n=scorm.getInteractionByID(id);if(n==='false'){return n;}
p1+=n+'.';obj.id=id;obj.type=scorm.getvalue(p1+'type');m=scorm.getvalue(p1+'objectives._count');obj.objectives=[];if(m!=='false'){for(i=0;i<m;i+=1){obj.objectives.push({id:scorm.getvalue(p1+'objectives.'+i+'.id')});}}
obj.timestamp=scorm.getvalue(p1+'timestamp');p=scorm.getvalue(p1+'correct_responses._count');obj.correct_responses=[];if(p!=='false'){for(i=0;i<p;i+=1){obj.correct_responses.push({pattern:decodeInteractionType(obj.type,scorm.getvalue(p1+'correct_responses.'+i+'.pattern'))});}}
obj.weighting=scorm.getvalue(p1+'weighting');obj.learner_response=decodeInteractionType(obj.type,scorm.getvalue(p1+'learner_response'));obj.result=scorm.getvalue(p1+'result');obj.latency=scorm.getvalue(p1+'latency');obj.description=scorm.getvalue(p1+'description');return obj;}
return notStartedYet();};this.setObjective=function(data){if(isStarted){var p1='cmi.objectives.',n=scorm.getObjectiveByID(data.id),result='false',f=false;scorm.debug(settings.prefix+": Setting Objective at "+n+" (This may be false)");if(isBadValue(n)){n=scorm.getvalue(p1+'_count');if(n==='false'){scorm.debug(settings.prefix+": LMS is return false, can not proceed, check error codes");return n;}
scorm.debug(settings.prefix+": Objective "+data.id+" was not found.  Adding new at "+n+" "+data.description);f=true;}
p1+=n+'.';if(f){if(!isBadValue(data.id)){scorm.setvalue(p1+'id',data.id.toString());}else{scorm.debug(settings.prefix+": You did not pass an objective ID!!",1);return'false';}}
if($.isPlainObject(data.score)){if(!isBadValue(data.score.scaled)){result=scorm.setvalue(p1+'score.scaled',trueRound(data.score.scaled,7).toString());}
if(!isBadValue(data.score.raw)){result=scorm.setvalue(p1+'score.raw',trueRound(data.score.raw,7).toString());}
if(!isBadValue(data.score.min)){result=scorm.setvalue(p1+'score.min',trueRound(data.score.min,7).toString());}
if(!isBadValue(data.score.max)){result=scorm.setvalue(p1+'score.max',trueRound(data.score.max,7).toString());}}else{scorm.debug(settings.prefix+": Did not receive a score object.  May or may not be an issue.",4);}
if(!isBadValue(data.success_status)){result=scorm.setvalue(p1+'success_status',data.success_status);}
if(!isBadValue(data.completion_status)){result=scorm.setvalue(p1+'completion_status',data.completion_status);}
if(!isBadValue(data.progress_measure)){result=scorm.setvalue(p1+'progress_measure',trueRound(data.progress_measure,7));}
if(!isBadValue(data.description)){result=scorm.setvalue(p1+'description',data.description);}
scorm.debug(settings.prefix+": Progress\n"+JSON.stringify(checkProgress(),null," "),4);return result;}
return notStartedYet();};this.getObjective=function(id){if(isStarted){var n=scorm.getObjectiveByID(id),p1='cmi.objectives.';if(n==='false'){return n;}
p1+=n+".";return{id:scorm.getvalue(p1+"id"),score:{scaled:scorm.getvalue(p1+"score.scaled"),raw:scorm.getvalue(p1+"score.raw"),min:scorm.getvalue(p1+"score.min"),max:scorm.getvalue(p1+"score.max")},success_status:scorm.getvalue(p1+"success_status"),completion_status:scorm.getvalue(p1+"completion_status"),progress_measure:scorm.getvalue(p1+"progress_measure"),description:scorm.getvalue(p1+"description")};}
return notStartedYet();};this.setCommentFromLearner=function(msg,loc,date){var p1="cmi.comments_from_learner.",n=scorm.getvalue(p1+"_count");if(n==='false'){scorm.debug(settings.prefix+": Sorry, LMS returned a comments count of 'false'.  Review error logs.");return n;}
if(msg.length>0&&msg.length<4000){scorm.debug(settings.prefix+": Sorry, message from learner was empty or exceeded the limit.",2);}
p1+=n+'.';scorm.setvalue(p1+'comment',msg);scorm.setvalue(p1+'location',loc);return scorm.setvalue(p1+'timestamp',scorm.isoDateToString(date));};this.gradeIt=function(){var scoreScaled=1,scoreRaw=scorm.getvalue('cmi.score.raw'),scoreMin=scorm.getvalue('cmi.score.min'),scoreMax=scorm.getvalue('cmi.score.max'),progressMeasure=scorm.getvalue('cmi.progress_measure');if((scoreMax-scoreMin)===0){scorm.debug(settings.prefix+": Division by Zero for scoreMax - scoreMin "+scoreMax,2);scorm.setvalue('cmi.score.scaled',scoreScaled);}else{scoreScaled=((scoreRaw-scoreMin)/(scoreMax-scoreMin)).toString();scorm.debug(settings.prefix+": Score Scaled = "+scoreScaled,3);scorm.setvalue('cmi.score.scaled',trueRound(scoreScaled,7));}
if(parseFloat(progressMeasure)>=parseFloat(settings.completion_threshold)){scorm.setvalue('cmi.completion_status','completed');}else{scorm.setvalue('cmi.completion_status','incomplete');}
if(parseFloat(scoreScaled)>=parseFloat(settings.scaled_passing_score)){scorm.setvalue('cmi.success_status','passed');}else{scorm.setvalue('cmi.success_status','failed');}
return'true';};this.happyEnding=function(){if(isStarted){scorm.setvalue('cmi.score.scaled','1');scorm.setvalue('cmi.score.raw','1');scorm.setvalue('cmi.success_status','passed');return scorm.setvalue('cmi.completion_status','completed');}
return notStartedYet();};this.commit=function(){if(isStarted){return scorm.commit('');}
return notStartedYet();};this.suspend=function(){if(isStarted){setSuspendData();scorm.debug(settings.prefix+": I am suspending...",3);scorm.setvalue('cmi.exit','suspend');updateStatus();isStarted=false;return scorm.terminate();}
return notStartedYet();};this.finish=function(){if(isStarted){setSuspendData();scorm.debug(settings.prefix+": I am finishing...",3);scorm.setvalue('cmi.exit','normal');updateStatus();isStarted=false;return scorm.terminate();}
return notStartedYet();};this.timeout=function(){if(isStarted){setSuspendData();scorm.debug(settings.prefix+": I am timing out...",3);scorm.setvalue('cmi.exit','timeout');updateStatus();isStarted=false;return scorm.terminate();}
return notStartedYet();};this.isISO8601=isISO8601;this.set=function(n,v){switch(n){case"version":case"createDate":case"modifiedDate":case"prefix":triggerWarning(405);break;default:settings[n]=v;break;}
return(isError===false);};this.get=function(n){if(settings[n]===undefined){triggerWarning(404);return false;}
return settings[n];};$(window).bind('load',initSCO);$(window).bind('unload',exitSCO);$(scorm).on('exception',function(e){triggerException(e.error);});}